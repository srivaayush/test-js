
import React from "react";

import "./profile.css";

 import Feed from "../../components/feed/Feed";

import Topbar from "../../components/topbar/Topbar";

import CameraAltIcon from "@mui/icons-material/CameraAlt";

import { Users} from "../../dummyData";

import { Link, useNavigate } from "react-router-dom"; I

import { useState} from "react";

import axios from "axios";

import { useEffect} from "react";

import Loader from "../../components/loader/Loader";

import MyFriend from "../../components/online/MyFriend";

import AddPhotoAlternateIcon from "@mui/icons-material/AddPhotoAlternate";

import { useRef} from "react";

import ModalExample from '../../

components/modal/CommentModal';

function Profile() {

const [isModalOpen, setIsModalopen] useState(false);

const handleButtonClick()->[ setIsModalOpen(true); console.log("modal open")

}

const handleCloseMoad1 = ()->{ setIsModalopen(false);

const token localStorage.getItem('jwtToken');

const navigate useNavigate();

const [loading, setLoading] useState(true);

const [user, setUser] useState(null);

const [file, setFile] useState(null);

const [users, setUsers] useState(null);



useEffect(()=>{

axios.get("http://localhost:4000/users/me", (headers: ("Authorization":token}}).then((response)=>{


console.log(response.data);

setUser (response.data);

setLoading(false);

)).catch((error)=>{

console.log("please login!")

localStorage.removeItem('jwtToken");

navigate("/login");

})

useEffect(()->{

if(user)

{

axios.get("http://localhost:4002/friendrequest/getFriends/"+user.id).then((resposne)->(

setUsers (resposne.data);

)).catch((error)->(

console.log("some error occured during fetching friends");
})

}

), [user])

const fileInputrefuseRef(null);

const fileInputref2usellef(null);

const handleClick async ()-> fileInputref.current.click();

const handleClick2 async ()->{

fileInputref2.current.click();

}

const handleFileClick async (e) => {

e.preventDefault();

const selectedFilee.target.files[0];

setFile(selectedFile);

const formData new FormData();

forData.append('file', e.target.files[0]);

await axios.post("http://localhost:4000/users/upload/"+user.id+"/"+2, formData).then((response)->(

setUser((...user, img2:response.data));

}).catch((error)=>{

console.log("some error occured");

})

};

const handleFileClick2 async (e) => {

// e.preventDefault();

console.log("clicked");

const selectedFilee.target.files[0];

setFile(selectedFile);


const formData new FormData();

formData.append('file',e.target.files[0]);

console.log("clicked2")

await axios.post("http://localhost:4000/users/upload/"+user.id+"/"+1,formData).then((response)->( setUser((...user, img1:response.data));

}

).catch((error)->{

console.log("some error occured");

})

};

return (


1(user) ? (<Loader/>):

<>

<>

<ModalExample 1s0pen (1sModalOpen) onClose-(handleCloseMoad1)/>

<div className="profile">

<Topbar me (user)/>

<div className="fbIcon">

<Link to"/home" style=((textDecoration: 'none'))>


<img height="60px" src="../assets/icon.png"} alt =^ mm />

</Link>

</div>

<div className="profileContainer">

<div className="profileCenter ">

<div className="profileCenterTop">

<img

src=[(user.img2)?user.img2:"../assets/post/3.jpeg")

alt="coverphoto"

className="coverPhoto"

(/* <button className="editCoverPhotoÃŸtn" onclick=[handleClick}>

<AddPhotoAlternateIcon

style = {{

color: "dodgerblue",

cursor: pointer",

}}

/>


<b> <span className="editPicText">Change Cover</span></b>

</button> */}

<button class="custom-button" onclick=[handleClick}>

<svg xmlns="http://www.w3.org/2000/svg" width="24" viewBox="0 0 24 24" height="24" fill="none" class="svg-icon"><g strok

<span class="lable">Change Cover</span>

</button>


<input

type="file"

name="file-upload"

id="file-upload"

accept="image/*, video/**

style-{{ display: "none"}}

ref-{fileInputref}

onChange-{handleFileClick}

/>

</div>

<div className="profileCenterDown">

<div className="profileCenterDownCont">

<div className="profilePhotoCont">

<img

src={(user.img1)?user.img1:"../assets/post/3.jpeg"}

alt="profiephoto"

className="profilePhoto"

</div>


<h4 className="profileUsername">

[user.userName(" ")

(/* <p style={{ fontsize: 16px", margin: "8", opacity: "0.5"

209 friends

</p> */)

</h4>

</div>

</div>

</div>


<button onclick=(handleClick2)>

<AddPhotoAlternateIcon

className="editCoverPhotoBtn-2"

style={{

color: "dodgerblue", cursor: pointer",

</button>

<input

type="file"

name-file-upload2"

id="file-upload2"

accept="image/*, video/*"

style={{ display: "none" }}

ref=[fileInputref2}

onChange (handleFileClick2}

<div className="profileBottom">

<div className="profileBottomLeft">

<div className="profileUserInfo">

<h4 style={{ top: '188px', alignItems:"center", fontFamily:"cursive"}}>Friends</h4>


</div>

{ users && users.filter((user)=>{

return user.status == "Approve"

}).map((u)=>(

<MyFriend key={u.id) user={u}/>

))}

</div>

<div className="profileBottomRight">

<Feed userId={user.id) className="profileFeed" me={user} 

handleButtonClick=[handleButtonClick} />

</div>

</div>

</div>

</div>

</>

</>

} </>

)

}

export default Profile;
