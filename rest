import React from "react";
import "./profile.css";
import Feed from "../../components/feed/Feed";
import Topbar from "../../components/topbar/Topbar";
import CameraAltIcon from "@mui/icons-material/CameraAlt";
import { Users } from "../../dummyData";
import { Link, useNavigate } from "react-router-dom";
import { useState } from react;
import axios from "axios";
import { useEffect } from "react";
import Loader from "../../components/loader/Loader";
import MyFriend from "../../components/online/MyFriend";
import AddPhotoAlternateIcon from "@mui/icons-material/AddPhotoAlternate";
import { useRef } from "react";
import ModalExample from "../../components/modal/CommentModal";

function Profile() {
  const [isModalOpen, setIsModalOpen] = useState(false);

  const handleButtonClick = () => {
    setIsModalOpen(true);
    console.log("modal open")
  }

  const handleCloseModal1 = () => {
    setIsModalOpen(false);
  };

  const token = localStorage.getItem('jwtToken');
  const navigate = useNavigate();

  const [loading, setLoading] = useState(true);
  const [user, setUser] = useState(null);
  const [file, setFile] = useState(null);
  const [users, setUsers] = useState(null);

  useEffect(() => {
    axios.get("http://localhost:4000/users/me", { headers: { "Authorization": token } })
      .then((response) => {
        console.log(response.data);
        setUser(response.data);
        setLoading(false);
      })
      .catch((error) => {
        console.log("please login!");
        localStorage.removeItem('jwtToken');
        navigate("/login");
      });
  }, []);

  useEffect(() => {
    if (user) {
      axios.get(`http://localhost:4002/friendrequest/getFriends/${user.id}`)
        .then((response) => {
          setUsers(response.data);
        })
        .catch((error) => {
          console.log("some error occurred during fetching friends");
        });
    }
  }, [user]);

  const fileInputRef1 = useRef(null);
  const fileInputRef2 = useRef(null);

  const handleClick = async () => {
fileInputRef1.current.click();
}
  const handleClick2 = async () => {
fileInputRef2.current.click();
}

  const handleFileClick = async (e) => {
    e.preventDefault();
    const selectedFile = e.target.files[0];
    setFile(selectedFile);
    const formData = new FormData();
    formData.append('file', e.target.files[0]);

    await axios.post(`http://localhost:4000/users/upload/${user.id}/2`, formData)
      .then((response) => {
        setUser({ ...user, img2: response.data });
      })
      .catch((error) => {
        console.log("some error occurred");
      });
  };

  const handleFileClick2 = async (e) => {
console.log("clicked");
    const selectedFile = e.target.files[0];
    setFile(selectedFile);
    const formData = new FormData();
    formData.append('file', e.target.files[0]);
    console.log("clicked2")
    await axios.post(`http://localhost:4000/users/upload/${user.id}/1`, formData)
      .then((response) => {
        setUser({ ...user, img1: response.data });
      })
      .catch((error) => {
        console.log("some error occurred");
      });
  };

  return (
    <>
      { !(user) ? (<Loader />) : (
        <>
          <ModalExample isOpen={isModalOpen} onClose={handleCloseModal1} />

          <div className="profile">
            <Topbar me={user} />

            <div className="fbIcon">
              <Link to="/home" style={{ textDecoration: 'none' }}>
                <img height="60px" src="../assets/icon.png" alt="mm" />
              </Link>
            </div>

            <div className="profileContainer">
              <div className="profileCenter ">
                <div className="profileCenterTop">
                  <img
                    src={user.img2 ? user.img2 : "../assets/post/3.jpeg"}
                    alt="coverphoto"
                    className="coverPhoto"
                  />
                  <button className="custom-button" onClick={handleClick}>
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" viewBox="0 0 24 24" height="24" fill="none" className="svg-icon">
                      <g stroke="#000" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                        {/* Your SVG path here */}
                      </g>
                    </svg>
                    <span className="lable">Change Cover</span>
                  </button>
                  <input
                    type="file"
                    name="file-upload"
                    id="file-upload"
                    accept="image/*, video/**"
                    style={{ display: "none" }}
                    ref={fileInputRef1}
                    onChange={handleFileClick}
                  />
                </div>

                <div className="profileCenterDown">
                  <div className="profileCenterDownCont">
                    <div className="profilePhotoCont">
                      <img src={user.img1 ? user.img1 : "../assets/post/3.jpeg"} alt="profilephoto" className="profilePhoto" />
                    </div>
                    <h4 className="profileUsername">
                      {user.userName}
                      <span style={{ fontSize: '16px', margin: '8px', opacity: '0.5' }}>209 friends</span>
                    </h4>
                  </div>
                </div>

                <button onClick={handleClick2}>
                  <AddPhotoAlternateIcon className="editCoverPhotoBtn-2" style={{ color: "dodgerblue", cursor: "pointer" }} />
                </button>

                <input
                  type="file"
                  name="file-upload2"
                  id="file-upload2"
                  accept="image/*, video/*"
                  style={{ display: "none" }}
                  ref={fileInputRef2}
                  onChange={handleFileClick2}
                />
              </div>

              <div className="profileBottom">
                <div className="profileBottomLeft">
                  <div className="profileUserInfo">
                    <h4 style={{ top: '188px', alignItems: "center", fontFamily: "cursive" }}>Friends</h4>
                  </div>
                  {users && users.filter((user) => user.status === "Approve").map((u) => (
                    <MyFriend key={u.id} user={u} />
                  ))}
                </div>

                <div className="profileBottomRight">
                  <Feed userId={user.id} className="profileFeed" me={user} handleButtonClick={handleButtonClick} />
                </div>
              </div>
            </div>
          </div>
        </>
      )}
    </>
  );
}

export default Profile;